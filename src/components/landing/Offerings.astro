---
// Import the JSON file for Offerings
import offeringsData from '../../data/offeringsData.json';
---

<section class="border-b border-white/20 bg-accent-500">
  <div class="mx-auto max-w-7xl border-white/20 border-x overflow-hidden p-8">
    {/* Carousel Container */}
    <div class="carousel-marquee-container relative w-full overflow-hidden">
      <div class="carousel-image-marquee flex gap-5" id="carousel-loop">
        {/* Offerings */}
        {offeringsData.map((offering, index) => (
          <div key={index} class="carousel-item relative w-[255px] h-[392px] rounded-lg overflow-hidden shadow-md group">
            {/* Image Section */}
            <img
              src={offering.image}
              alt={offering.title}
              class="w-full h-full object-cover transition-transform duration-500 ease-in-out group-hover:scale-105"
            />

            {/* Chips Section */}
            <div class="absolute bottom-0 left-0 right-0 bg-white/90 p-4 opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">
              <div class="flex flex-wrap gap-2">
                {offering.chips.map((chip, chipIndex) => (
                  <span
                    key={chipIndex}
                    class="px-3 py-1 bg-accent-500 text-white text-sm font-medium rounded-full shadow-sm"
                  >
                    {chip}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}

        {/* Duplicate Items for Infinite Scroll */}
        {offeringsData.map((offering, index) => (
          <div key={`duplicate-${index}`} class="carousel-item relative w-[255px] h-[392px] rounded-lg overflow-hidden shadow-md group">
            <img
              src={offering.image}
              alt={offering.title}
              class="w-full h-full object-cover transition-transform duration-500 ease-in-out group-hover:scale-105"
            />

            <div class="absolute bottom-0 left-0 right-0 bg-white/90 p-4 opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">
              <div class="flex flex-wrap gap-2">
                {offering.chips.map((chip, chipIndex) => (
                  <span
                    key={chipIndex}
                    class="px-3 py-1 bg-accent-500 text-white text-sm font-medium rounded-full shadow-sm"
                  >
                    {chip}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const marqueeContainer = document.querySelector('.carousel-marquee-container');
    const marqueeAnimation = document.querySelector('.carousel-image-marquee');

    if (!marqueeContainer || !marqueeAnimation) return;

    const scrollWidth = marqueeAnimation.scrollWidth / 2;

    // Infinite scrolling logic
    const handleScroll = () => {
      if (marqueeContainer.scrollLeft >= scrollWidth) {
        marqueeContainer.scrollLeft = 0;
      } else if (marqueeContainer.scrollLeft === 0) {
        marqueeContainer.scrollLeft = scrollWidth;
      }
    };
    marqueeContainer.addEventListener('scroll', handleScroll);

    // Smooth auto-scroll using requestAnimationFrame
    let isScrolling = true;

    const autoScroll = () => {
      if (isScrolling) {
        marqueeContainer.scrollBy({ left: 1, behavior: 'smooth' });
      }
      requestAnimationFrame(autoScroll);
    };

    autoScroll(); // Start auto-scroll

    // Pause auto-scroll on hover or drag
    const stopAutoScroll = () => (isScrolling = false);
    const startAutoScroll = () => (isScrolling = true);

    marqueeContainer.addEventListener('mouseenter', stopAutoScroll);
    marqueeContainer.addEventListener('mouseleave', startAutoScroll);

    // Drag-to-scroll functionality
    let isDragging = false;
    let startX = 0;
    let scrollLeft = 0;

    const startDrag = (e) => {
      isDragging = true;
      startX = e.pageX || (e.touches?.[0]?.pageX ?? 0);
      scrollLeft = marqueeContainer.scrollLeft;
      stopAutoScroll(); // Pause auto-scroll while dragging
    };

    const onDrag = (e) => {
      if (!isDragging) return;
      const currentX = e.pageX || (e.touches?.[0]?.pageX ?? 0);
      const x = currentX - startX;
      marqueeContainer.scrollLeft = scrollLeft - x;
    };

    const stopDrag = () => {
      if (isDragging) {
        isDragging = false;
        startAutoScroll(); // Restart auto-scroll after dragging
      }
    };

    marqueeContainer.addEventListener('mousedown', startDrag);
    document.addEventListener('mousemove', onDrag);
    document.addEventListener('mouseup', stopDrag);

    marqueeContainer.addEventListener('touchstart', startDrag);
    document.addEventListener('touchmove', onDrag);
    document.addEventListener('touchend', stopDrag);
  });
</script>
